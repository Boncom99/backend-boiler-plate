datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   
  content   String?
  published Boolean  @default(false)
  authorId  Int
}



model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  bio    String?
  userBooks UserBook[]
}

model Book {
  id        Int      @id @default(autoincrement())
  title     String
  author    Author   @relation(fields: [authorId], references: [id])
  authorId  Int
  publishedAt DateTime
  pages     Int
  isbn      String
  imageLink String
  language  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userBooks UserBook[]
}

//relation between book and User

model UserBook {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  readingSessions readingSession[]
}
model readingSession{
  id        Int      @id @default(autoincrement())
  userBook  UserBook @relation(fields: [userBookId], references: [id])
  userBookId Int
  realisedAt DateTime
  startPage Int
  endPage Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Author {
  id        Int      @id @default(autoincrement())
  name      String
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

